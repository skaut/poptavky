name: "CI"
on:
  push:
    branches:
      - master
  pull_request:
env:
  cache-version: 1

jobs:
  collect-dry-run:
    name: "Collector dry-run"
    uses: skaut/poptavky/.github/workflows/reusable-collect.yml@master
    secrets:
      PAT: ${{ secrets.PAT_PETA }}

  collector-lint:
    name: "Lint collector"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/collector
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Cache NPM dependencies"
        uses: actions/cache@v4
        with:
          path: "~/.npm"
          key: npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-

      - name: "Install NPM dependencies"
        run: |
          npm ci

      - name: "Lint"
        run: |
          npm run lint

  collector-test:
    name: "Test collector"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/collector
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: 'packages/collector/package-lock.json'

      - name: "Install NPM dependencies"
        run: |
          npm ci

      - name: "Run tests"
        run: |
          npm test

      - name: "Upload coverage results"
        uses: codecov/codecov-action@v5.1.1
        with:
          flags: collector
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  frontend-build:
    name: "Build frontend"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/frontend
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Cache NPM dependencies"
        uses: actions/cache@v4
        with:
          path: "~/.npm"
          key: npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-

      - name: "Install NPM dependencies"
        run: |
          npm ci

      - name: "Build"
        run: |
          npm run build

  frontend-lint:
    name: "Lint frontend"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/frontend
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Cache NPM dependencies"
        uses: actions/cache@v4
        with:
          path: "~/.npm"
          key: npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-

      - name: "Install NPM dependencies"
        run: |
          npm ci

      - name: "Lint"
        run: |
          npm run lint

  frontend-test:
    name: "Test frontend"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/frontend
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Cache NPM dependencies"
        uses: actions/cache@v4
        with:
          path: "~/.npm"
          key: npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-${{ hashFiles('package.json') }}
            npm-dependencies-${{ runner.os }}-${{ env.cache-version }}-

      - name: "Install NPM dependencies"
        run: |
          npm ci

      - name: "Test"
        run: |
          npm run test

      - name: "Upload coverage results"
        uses: codecov/codecov-action@v5.1.1
        with:
          flags: frontend
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
